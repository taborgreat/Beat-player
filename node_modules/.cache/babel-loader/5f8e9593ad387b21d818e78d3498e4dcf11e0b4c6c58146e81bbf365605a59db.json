{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Documents\\\\GitHub\\\\Beat-player\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  drumTypes: [{\n    type: \"kick\",\n    source: new Audio(require(\"./kick.mp3\").default),\n    isLoaded: false\n  }, {\n    type: \"snare\",\n    source: new Audio(require(\"./clap.mp3\").default),\n    isLoaded: false\n  }]\n};\nfunction App() {\n  _s();\n  const reducer = () => {};\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    // Listen for the 'canplaythrough' event to indicate that the audio files are loaded\n    state.drumTypes.forEach(drum => {\n      drum.source.addEventListener(\"canplaythrough\", () => {\n        dispatch({\n          type: \"AUDIO_LOADED\",\n          payload: drum.type\n        });\n      });\n    });\n\n    // Clean up the event listeners when the component is unmounted\n    return () => {\n      state.drumTypes.forEach(drum => {\n        drum.source.removeEventListener(\"canplaythrough\", () => {\n          dispatch({\n            type: \"AUDIO_LOADED\",\n            payload: drum.type\n          });\n        });\n      });\n    };\n  }, [state.drumTypes]);\n  const drumList = state.drumTypes.map(drum => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      if (drum.isLoaded) {\n        drum.source.play();\n      }\n    },\n    children: drum.type\n  }, drum.type, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"drum-machine\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"beat player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"melody\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"drums\",\n      children: drumList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useReducer","useEffect","jsxDEV","_jsxDEV","initialState","drumTypes","type","source","Audio","require","default","isLoaded","App","_s","reducer","state","dispatch","forEach","drum","addEventListener","payload","removeEventListener","drumList","map","onClick","play","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/Chris/Documents/GitHub/Beat-player/src/App.js"],"sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst initialState = {\n  drumTypes: [\n    {\n      type: \"kick\",\n      source: new Audio(require(\"./kick.mp3\").default),\n      isLoaded: false,\n    },\n    {\n      type: \"snare\",\n      source: new Audio(require(\"./clap.mp3\").default),\n      isLoaded: false,\n    },\n  ],\n};\n\nfunction App() {\n  const reducer = () => {};\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    // Listen for the 'canplaythrough' event to indicate that the audio files are loaded\n    state.drumTypes.forEach((drum) => {\n      drum.source.addEventListener(\"canplaythrough\", () => {\n        dispatch({ type: \"AUDIO_LOADED\", payload: drum.type });\n      });\n    });\n\n    // Clean up the event listeners when the component is unmounted\n    return () => {\n      state.drumTypes.forEach((drum) => {\n        drum.source.removeEventListener(\"canplaythrough\", () => {\n          dispatch({ type: \"AUDIO_LOADED\", payload: drum.type });\n        });\n      });\n    };\n  }, [state.drumTypes]);\n\n  const drumList = state.drumTypes.map((drum) => (\n    <button\n      key={drum.type}\n      onClick={() => {\n        if (drum.isLoaded) {\n          drum.source.play();\n        }\n      }}\n    >\n      {drum.type}\n    </button>\n  ));\n\n  return (\n    <div id=\"drum-machine\">\n      <h1>beat player</h1>\n      <div id=\"melody\"></div>\n      <div id=\"drums\">{drumList}</div>\n      <div id=\"display\"></div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}