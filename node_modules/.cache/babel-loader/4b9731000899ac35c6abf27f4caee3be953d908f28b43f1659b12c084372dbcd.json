{"ast":null,"code":"import { actions } from './actions';\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actions.TOGGLESONG:\n      {\n        state.playPauseImage = require('./images/play.png');\n        if (state.currentSong < state.maxSongs && action.move === actions.NEXTSONG) {\n          return {\n            ...state,\n            currentSong: state.currentSong + 1\n          };\n        } else if (state.currentSong >= state.maxSongs && action.move === actions.NEXTSONG) {\n          return {\n            ...state,\n            currentSong: 0\n          };\n        } else if (state.currentSong > 0 && action.move === actions.PREVSONG) {\n          return {\n            ...state,\n            currentSong: state.currentSong - 1\n          };\n        } else {\n          return {\n            ...state,\n            currentSong: state.maxSongs\n          };\n        }\n      }\n    case actions.TOGGLEPAUSE:\n      {\n        if (!state.melodies[state.currentSong].isPaused) {\n          action.songRef.play();\n          return {\n            ...state,\n            playPauseImage: require(\"./images/pause.png\"),\n            melodies: state.melodies.map((melody, index) => index === state.currentSong ? {\n              ...melody,\n              isPaused: !melody.isPaused\n            } : melody)\n          };\n        } else {\n          action.songRef.pause();\n          return {\n            ...state,\n            playPauseImage: require(\"./images/play.png\"),\n            melodies: state.melodies.map((melody, index) => index === state.currentSong ? {\n              ...melody,\n              isPaused: !melody.isPaused\n            } : melody)\n          };\n        }\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["actions","reducer","state","action","type","TOGGLESONG","playPauseImage","require","currentSong","maxSongs","move","NEXTSONG","PREVSONG","TOGGLEPAUSE","melodies","isPaused","songRef","play","map","melody","index","pause"],"sources":["C:/Users/Chris/Documents/GitHub/Beat-player/src/reduce.js"],"sourcesContent":["import {actions} from './actions'\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case actions.TOGGLESONG: {\r\n        state.playPauseImage = require('./images/play.png')\r\n\r\n        if (\r\n          state.currentSong < state.maxSongs &&\r\n          action.move === actions.NEXTSONG\r\n        ) {\r\n          return { ...state, currentSong: state.currentSong + 1 };\r\n        } else if (\r\n          state.currentSong >= state.maxSongs &&\r\n          action.move === actions.NEXTSONG\r\n        ) {\r\n          return { ...state, currentSong: 0 };\r\n        } else if (state.currentSong > 0 && action.move === actions.PREVSONG) {\r\n          return { ...state, currentSong: state.currentSong - 1 };\r\n        } else {\r\n          return { ...state, currentSong: state.maxSongs };\r\n        }\r\n      }\r\n\r\n      case actions.TOGGLEPAUSE: {\r\n        if (!state.melodies[state.currentSong].isPaused) {\r\n          action.songRef.play();\r\n          return {\r\n            ...state,\r\n            playPauseImage: require(\"./images/pause.png\"),\r\n            melodies: state.melodies.map((melody, index) =>\r\n              index === state.currentSong\r\n                ? { ...melody, isPaused: !melody.isPaused }\r\n                : melody\r\n            ),\r\n          };\r\n        } else {\r\n          action.songRef.pause();\r\n          return {\r\n            ...state,\r\n            playPauseImage: require(\"./images/play.png\"),\r\n            melodies: state.melodies.map((melody, index) =>\r\n              index === state.currentSong\r\n                ? { ...melody, isPaused: !melody.isPaused }\r\n                : melody\r\n            ),\r\n          };\r\n        }\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n"],"mappings":"AAAA,SAAQA,OAAO,QAAO,WAAW;AAEjC,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKJ,OAAO,CAACK,UAAU;MAAE;QACvBH,KAAK,CAACI,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;QAEnD,IACEL,KAAK,CAACM,WAAW,GAAGN,KAAK,CAACO,QAAQ,IAClCN,MAAM,CAACO,IAAI,KAAKV,OAAO,CAACW,QAAQ,EAChC;UACA,OAAO;YAAE,GAAGT,KAAK;YAAEM,WAAW,EAAEN,KAAK,CAACM,WAAW,GAAG;UAAE,CAAC;QACzD,CAAC,MAAM,IACLN,KAAK,CAACM,WAAW,IAAIN,KAAK,CAACO,QAAQ,IACnCN,MAAM,CAACO,IAAI,KAAKV,OAAO,CAACW,QAAQ,EAChC;UACA,OAAO;YAAE,GAAGT,KAAK;YAAEM,WAAW,EAAE;UAAE,CAAC;QACrC,CAAC,MAAM,IAAIN,KAAK,CAACM,WAAW,GAAG,CAAC,IAAIL,MAAM,CAACO,IAAI,KAAKV,OAAO,CAACY,QAAQ,EAAE;UACpE,OAAO;YAAE,GAAGV,KAAK;YAAEM,WAAW,EAAEN,KAAK,CAACM,WAAW,GAAG;UAAE,CAAC;QACzD,CAAC,MAAM;UACL,OAAO;YAAE,GAAGN,KAAK;YAAEM,WAAW,EAAEN,KAAK,CAACO;UAAS,CAAC;QAClD;MACF;IAEA,KAAKT,OAAO,CAACa,WAAW;MAAE;QACxB,IAAI,CAACX,KAAK,CAACY,QAAQ,CAACZ,KAAK,CAACM,WAAW,CAAC,CAACO,QAAQ,EAAE;UAC/CZ,MAAM,CAACa,OAAO,CAACC,IAAI,CAAC,CAAC;UACrB,OAAO;YACL,GAAGf,KAAK;YACRI,cAAc,EAAEC,OAAO,CAAC,oBAAoB,CAAC;YAC7CO,QAAQ,EAAEZ,KAAK,CAACY,QAAQ,CAACI,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KACzCA,KAAK,KAAKlB,KAAK,CAACM,WAAW,GACvB;cAAE,GAAGW,MAAM;cAAEJ,QAAQ,EAAE,CAACI,MAAM,CAACJ;YAAS,CAAC,GACzCI,MACN;UACF,CAAC;QACH,CAAC,MAAM;UACLhB,MAAM,CAACa,OAAO,CAACK,KAAK,CAAC,CAAC;UACtB,OAAO;YACL,GAAGnB,KAAK;YACRI,cAAc,EAAEC,OAAO,CAAC,mBAAmB,CAAC;YAC5CO,QAAQ,EAAEZ,KAAK,CAACY,QAAQ,CAACI,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KACzCA,KAAK,KAAKlB,KAAK,CAACM,WAAW,GACvB;cAAE,GAAGW,MAAM;cAAEJ,QAAQ,EAAE,CAACI,MAAM,CAACJ;YAAS,CAAC,GACzCI,MACN;UACF,CAAC;QACH;MACF;IAEA;MACE,OAAOjB,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}